// Part A: Dependency Injection using Spring (Java-based Configuration)

package com.example.springdi;

import org.springframework.context.annotation.*;

class Course {
    public void displayCourse() {
        System.out.println("Course: Java Spring Development");
    }
}

class Student {
    private Course course;

    public Student(Course course) {
        this.course = course;
    }

    public void showDetails() {
        course.displayCourse();
    }
}

@Configuration
class AppConfig {
    @Bean
    public Course course() {
        return new Course();
    }

    @Bean
    public Student student() {
        return new Student(course());
    }
}

public class MainApp {
    public static void main(String[] args) {
        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);
        Student student = context.getBean(Student.class);
        student.showDetails();
        context.close();
    }
}
